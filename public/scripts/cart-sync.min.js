!function(){const t="https://arco-henna.vercel.app";let e=null,n=null,a=0,o=!1,c=0;function r(){const t="undefined"!=typeof window&&window.CUSTOMER_ID?String(window.CUSTOMER_ID):null;return t&&t!==e&&(console.log("[CartSync] Customer ID updated from",e,"to",t),e=t),e}async function i(){try{const t=await fetch("/cart.js",{method:"GET",credentials:"include",headers:{Accept:"application/json"}});if(t.ok){return await t.json()}}catch(t){}return null}async function s(){if(r(),!e)return null;try{const n=await fetch(`${t}/api/cart?userId=${encodeURIComponent(e)}`,{method:"GET",headers:{Accept:"application/json"}});if(n.ok){return(await n.json()).cart||null}}catch(t){}return null}async function l(n){if(r(),!e)return null;try{const o=await fetch(t+"/api/cart",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:e,cartData:n||{}})});if(o.ok){const t=await o.json();return console.log("[CartSync] Local cart synced to backend"),a=Date.now(),y(),t}console.error("[CartSync] Failed to sync cart to backend. Status:",o.status)}catch(t){console.error("[CartSync] Error syncing cart to backend:",t)}return null}function d(t,e){if(!t&&!e)return!0;if(!t||!e)return!1;const n=t.items?.length||0,a=e.items?.length||0;if(n!==a)return console.log("[CartSync] Item count mismatch:",n,"vs",a),!1;if(0===n)return!0;const o=t.total_price?Math.round(t.total_price/100*100)/100:0,c=e.totalPrice?Math.round(100*e.totalPrice)/100:0;if(Math.abs(o-c)>.01)return console.log("[CartSync] Price mismatch:",o,"vs",c),!1;const r=t.items||[],i=e.items||[];if(r.length!==i.length)return!1;const s=new Map,l=new Map;r.forEach(t=>{const e=String(t.variant_id||t.id);s.set(e,t.quantity)}),i.forEach(t=>{const e=String(t.shopifyVariantId||t.variantId||t.variant_id);l.set(e,t.quantity)});for(const[t,e]of s){const n=l.get(t);if(void 0===n||e!==n)return console.log("[CartSync] Item mismatch for key:",t,"local:",e,"backend:",n),!1}for(const[t,e]of l){const n=s.get(t);if(void 0===n||n!==e)return console.log("[CartSync] Backend item not found in local for key:",t,"backend:",e,"local:",n),!1}return!0}async function u(t){if(o)console.log("[CartSync] Already reloading, skipping duplicate reload");else if(c>=3)console.log("[CartSync] Maximum reload attempts reached, stopping sync to prevent infinite loop");else try{if(console.log("[CartSync] Replacing local cart with backend cart (attempt",c+1,"of",3,")"),o=!0,c++,localStorage.setItem("cart_sync_reloaded","1"),localStorage.setItem("cart_sync_timestamp",Date.now().toString()),localStorage.setItem("cart_sync_attempts",c.toString()),await fetch("/cart/clear.js",{method:"POST",credentials:"include"}),t&&t.items&&t.items.length>0){const e=t.items.map(t=>({id:t.shopifyVariantId,quantity:t.quantity,properties:t.properties||void 0}));await fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({items:e})})}window.location.reload()}catch(t){console.error("[CartSync] Error replacing cart:",t),o=!1,c--}}function p(){const t=window.fetch;window.fetch=function(...e){let a="string"==typeof e[0]?e[0]:e[0]?.url;return a&&a.match(/\/cart\/(add|update|change|clear)(\.js)?/)&&(n&&clearInterval(n),setTimeout(async()=>{const t=await i();await l(t)},1e3)),t.apply(this,e)};const e=window.XMLHttpRequest.prototype.open;window.XMLHttpRequest.prototype.open=function(t,a,...o){return this.addEventListener("load",function(){a&&a.match(/\/cart\/(add|update|change|clear)(\.js)?/)&&(n&&clearInterval(n),setTimeout(async()=>{const t=await i();await l(t)},1e3))}),e.call(this,t,a,...o)},void 0!==window.Shopify&&window.Shopify.onCartUpdate&&(window.Shopify.onCartUpdate=function(t){setTimeout(async()=>{await l(t)},500)}),document.addEventListener("cart:updated",function(t){setTimeout(async()=>{const t=await i();await l(t)},500)})}function y(){const t=Date.now()-a;setTimeout(()=>{n=setInterval(async()=>{if("visible"!==document.visibilityState)return;if(o)return;if(Date.now()-a<1e4)return;if(c>=3)return console.log("[CartSync] Maximum reload attempts reached, stopping polling to prevent infinite loop"),void clearInterval(n);if(r(),!e)return;const[t,l]=await Promise.all([i(),s()]);d(t,l)||(console.log("[CartSync] Cart difference detected, updating local cart"),await u(l),clearInterval(n))},3e3)},t<1e4?1e4-t:2e3)}const f=()=>{r(),async function(){if(localStorage.getItem("cart_sync_reloaded")){localStorage.removeItem("cart_sync_reloaded");const t=localStorage.getItem("cart_sync_attempts");t&&(c=parseInt(t),localStorage.removeItem("cart_sync_attempts"));const n=localStorage.getItem("cart_sync_timestamp");if(n&&(a=parseInt(n),localStorage.removeItem("cart_sync_timestamp")),r(),e){const[t,e]=await Promise.all([i(),s()]);d(t,e)?(console.log("[CartSync] Carts synchronized after reload"),c=0):(console.log("[CartSync] Carts still different after reload, syncing again..."),e&&e.items&&e.items.length>0?await u(e):t&&t.items&&t.items.length>0&&await l(t))}return}if(r(),!e)return void console.log("[CartSync] No customer ID found, skipping sync");console.log("[CartSync] Starting initial sync for customer:",e);const[t,n]=await Promise.all([i(),s()]),o=t&&t.items&&t.items.length>0,p=n&&n.items&&n.items.length>0;(o||p)&&(o&&!p?(console.log("[CartSync] Syncing local cart to backend"),await l(t)):!o&&p?(console.log("[CartSync] Replacing local cart with backend cart"),await u(n)):d(t,n)?console.log("[CartSync] Carts are synchronized"):(console.log("[CartSync] Carts are different, replacing local cart"),await u(n)))}(),setTimeout(p,1e3),y()};"complete"===document.readyState?f():window.addEventListener("load",f)}();