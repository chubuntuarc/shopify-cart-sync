!function(){const o="https://arco-henna.vercel.app";let t=null,e=!1,n=0;let c=!1;function a(){const o="undefined"!=typeof window&&window.CUSTOMER_ID?String(window.CUSTOMER_ID):null;return console.log("👤 Customer ID:",o),o}function i(){const o=!!function(){const o=document.cookie.match(/(?:^|;\s*)persistent_cart_session=([^;]*)/),t=o?decodeURIComponent(o[1]):null;return console.log("🔑 Session Token:",t?"Present":"Not found"),t}();return console.log("👤 User logged in:",o),o}async function s(){try{console.log("🛒 Fetching local cart...");const o=await fetch("/cart.js",{method:"GET",credentials:"include",headers:{Accept:"application/json"}});if(o.ok){const t=await o.json();return console.log("🛒 Local cart fetched:",t),t}}catch(o){console.error("❌ Error fetching Shopify AJAX cart:",o)}return null}function r(o,t=null){o&&(localStorage.setItem("cart",JSON.stringify(o)),console.log("💾 Local cart saved to localStorage"),t&&t())}async function l(){if(!t)return console.log("⚠️ No customer ID, skipping backend cart fetch"),null;try{console.log("🔄 Fetching backend cart...");const e=await fetch(`${o}/api/cart?userId=${encodeURIComponent(t)}`,{method:"GET",headers:{Accept:"application/json"}});if(e.ok){const o=await e.json();return console.log("🔄 Backend cart fetched:",o.cart),o.cart||null}}catch(o){console.error("❌ Error fetching backend cart:",o)}return null}async function d(e){if(!t)return console.log("⚠️ No customer ID, skipping backend sync"),null;try{console.log("🔄 Syncing local cart to backend...");const n=await fetch(o+"/api/cart",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t,cartData:e||{}})});if(n.ok){const o=await n.json();return console.log("✅ Local cart synced to backend:",o.cart),o.cart||null}}catch(o){console.error("❌ Error syncing local cart to backend:",o)}return null}function g(o,t){const e=JSON.stringify(o)===JSON.stringify(t);return console.log("🔄 Carts equal:",e),e}console.log("🔄 Cart Sync Script Initialized"),t=a(),function(o){o?(document.cookie=`user_id=${o}; path=/; SameSite=Lax`,console.log("🍪 User ID cookie set:",o)):(document.cookie="user_id=; Max-Age=0; path=/; SameSite=Lax",console.log("🍪 User ID cookie cleared"))}(t);async function u(){const o=Date.now();if(c||o-n<1e3)console.log("⏳ Sync skipped - too soon or in progress");else{console.log("🔄 Starting cart sync..."),c=!0,n=o;try{if(t=a(),!t)return void console.log("⚠️ No customer ID, skipping sync");const[o,n]=await Promise.all([s(),l()]);if(console.log("📊 Sync State:",{hasLocalCart:!!o,hasBackendCart:!!n,firstSyncDone:e}),!e)return console.log("🔄 First sync attempt..."),!(n?.items?.length>0)||o&&g(o,n)?!n&&o?.items?.length>0?(console.log("🔄 Syncing local cart to backend..."),await d(o),void(e=!0)):void(e=!0):(console.log("🔄 Replacing local cart with backend cart..."),await p(n),r(n),e=!0,void console.log("✅ Cart Loaded ⚡️"));if(o&&n){if(g(o,n))return void console.log("🔄 Carts are in sync, no action needed");const t=o.updated_at||0;t>(n.updated_at||0)?(console.log("🔄 Local cart is newer, syncing to backend..."),await d(o)):(console.log("🔄 Backend cart is newer, updating local..."),await p(n),r(n))}else o?.items?.length>0?(console.log("🔄 Syncing local cart to backend..."),await d(o)):n?.items?.length>0&&(console.log("🔄 Updating local cart with backend data..."),await p(n),r(n))}catch(o){console.error("❌ Error during sync:",o)}finally{c=!1}}}async function p(o){if(console.log("🔄 Replacing Shopify cart..."),await fetch("/cart/clear.js",{method:"POST",credentials:"include"}),console.log("✅ Cart cleared"),o&&o.items&&o.items.length>0){console.log("🛒 Adding items to cart:",o.items);const t=o.items.map((o=>({id:o.shopifyVariantId||o.variantId||o.variant_id,quantity:o.quantity,properties:o.properties||void 0})));await fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({items:t})}),console.log("✅ Items added to cart")}await async function(o,t=10,e=300){console.log("⏳ Waiting for Shopify cart to match...");for(let n=0;n<t;n++){if(g(await s(),o))return void console.log("✅ Cart matched successfully");console.log(`⏳ Attempt ${n+1}/${t}: Cart not matched yet`),await new Promise((o=>setTimeout(o,e)))}console.warn("⚠️ Shopify cart did not match backend cart after waiting")}(o)}t=a(),t&&function(t){t?(console.log("🔄 Updating session with user ID:",t),fetch(o+"/api/session/update",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:t})}).then((o=>{o.ok?console.log("✅ Session updated successfully"):console.error("❌ Failed to update session:",o.status)})).catch((o=>{console.error("❌ Error updating session:",o)}))):console.log("⚠️ No customer ID provided for session update")}(t),console.log("🏹 Arco - Cart Sync Initialized"),function(){console.log("🔄 Setting up cart request interception...");const o=window.fetch;window.fetch=function(...t){let n="string"==typeof t[0]?t[0]:t[0]?.url;return n&&n.match(/\/cart\/(add|update|change|clear)(\.js)?/)&&e&&(console.log("🛒 Cart modification detected:",n),setTimeout((()=>{console.log("🔄 Triggering sync after cart modification..."),u()}),100)),o.apply(this,t)};const t=window.XMLHttpRequest.prototype.open;window.XMLHttpRequest.prototype.open=function(o,n,...c){return this.addEventListener("load",(function(){n&&n.match(/\/cart\/(add|update|change|clear)(\.js)?/)&&e&&(console.log("🛒 Cart modification detected (XHR):",n),setTimeout((()=>{console.log("🔄 Triggering sync after cart modification..."),u()}),100))})),t.call(this,o,n,...c)},console.log("✅ Cart request interception setup complete")}(),u(),async function(){console.log("🔄 Starting cart observation...");let o=await s();console.log("📝 Initial cart state:",o),setInterval((async()=>{if(c)return void console.log("⏳ Skip observation - sync in progress");const t=await s();t&&t.items&&t.items.length>0&&!g(t,o)&&(console.log("🔄 Cart change detected in observation interval"),console.log("📝 Previous cart:",o),console.log("📝 Current cart:",t),o=t,i()?(console.log("🔄 Syncing observed cart changes to backend..."),await d(t)):console.log("⚠️ User not logged in, skipping backend sync"))}),1e3),console.log("✅ Cart observation started")}()}();