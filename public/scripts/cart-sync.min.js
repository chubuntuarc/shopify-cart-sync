!function(){const o="https://arco-henna.vercel.app";let n=null,e=!1,t=0;let a=!1;function c(){return"undefined"!=typeof window&&window.CUSTOMER_ID?String(window.CUSTOMER_ID):null}function r(){const o=!!function(){const o=document.cookie.match(/(?:^|;\s*)persistent_cart_session=([^;]*)/),n=o?decodeURIComponent(o[1]):null;return console.log("🔑 Session Token:",n?"Present":"Not found"),n}();return console.log("👤 User logged in:",o),o}async function i(){try{console.log("🛒 Fetching local cart...");const o=await fetch("/cart.js",{method:"GET",credentials:"include",headers:{Accept:"application/json"}});if(o.ok){const n=await o.json();return console.log("🛒 Local cart fetched:",n),n}}catch(o){console.error("❌ Error fetching Shopify AJAX cart:",o)}return null}function s(o,n=null){o&&(localStorage.setItem("cart",JSON.stringify(o)),console.log("💾 Local cart saved to localStorage"),n&&n())}async function l(){if(!n)return console.log("⚠️ No customer ID, skipping backend cart fetch"),null;try{console.log("🔄 Fetching backend cart...");const e=await fetch(`${o}/api/cart?userId=${encodeURIComponent(n)}`,{method:"GET",headers:{Accept:"application/json"}});if(e.ok){const o=await e.json();return console.log("🔄 Backend cart fetched:",o.cart),o.cart||null}}catch(o){console.error("❌ Error fetching backend cart:",o)}return null}async function d(e){if(!n)return console.log("⚠️ No customer ID, skipping backend sync"),null;try{console.log("🔄 Syncing local cart to backend...");const t=await fetch(o+"/api/cart",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:n,cartData:e||{}})});if(t.ok){const o=await t.json();return console.log("✅ Local cart synced to backend:",o.cart),o.cart||null}}catch(o){console.error("❌ Error syncing local cart to backend:",o)}return null}function p(o,n){const e=JSON.stringify(o)===JSON.stringify(n);return console.log("🔄 Carts equal:",e),e}console.log("🔄 Cart Sync Script Initialized"),n=c(),function(o){o?(document.cookie=`user_id=${o}; path=/; SameSite=Lax`,console.log("🍪 User ID cookie set:",o)):(document.cookie="user_id=; Max-Age=0; path=/; SameSite=Lax",console.log("🍪 User ID cookie cleared"))}(n);async function g(){const o=Date.now();if(a||o-t<1e3)console.log("⏳ Sync skipped - too soon or in progress");else{console.log("🔄 Starting cart sync..."),a=!0,t=o;try{if(n=c(),!n)return void console.log("⚠️ No customer ID, skipping sync");const[o,t]=await Promise.all([i(),l()]);if(console.log("📊 Sync State:",{hasLocalCart:!!o,hasBackendCart:!!t,firstSyncDone:e}),!e)return console.log("🔄 First sync attempt..."),!(t?.items?.length>0)||o&&p(o,t)?!t&&o?.items?.length>0?(console.log("🔄 Syncing local cart to backend..."),await d(o),void(e=!0)):void(e=!0):(console.log("🔄 Replacing local cart with backend cart..."),await u(t),s(t),e=!0,void console.log("✅ Cart Loaded ⚡️"));if(o&&t){if(p(o,t))return void console.log("🔄 Carts are in sync, no action needed");const n=o.updated_at||0;n>(t.updated_at||0)?(console.log("🔄 Local cart is newer, syncing to backend..."),await d(o)):(console.log("🔄 Backend cart is newer, updating local..."),await u(t),s(t))}else o?.items?.length>0?(console.log("🔄 Syncing local cart to backend..."),await d(o)):t?.items?.length>0&&(console.log("🔄 Updating local cart with backend data..."),await u(t),s(t))}catch(o){console.error("❌ Error during sync:",o)}finally{a=!1}}}async function u(o){console.log("🔄 Replacing Shopify cart...");const n="/cart"===window.location.pathname;try{if(await fetch("/cart/clear.js",{method:"POST",credentials:"include"}),console.log("✅ Cart cleared"),o&&o.items&&o.items.length>0){console.log("🛒 Adding items to cart:",o.items);const n=o.items.map((o=>({id:o.shopifyVariantId||o.variantId||o.variant_id,quantity:o.quantity,properties:o.properties||void 0})));await fetch("/cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({items:n})}),console.log("✅ Items added to cart")}await async function(o,n=10,e=300){console.log("⏳ Waiting for Shopify cart to match...");for(let t=0;t<n;t++){if(p(await i(),o))return void console.log("✅ Cart matched successfully");console.log(`⏳ Attempt ${t+1}/${n}: Cart not matched yet`),await new Promise((o=>setTimeout(o,e)))}console.warn("⚠️ Shopify cart did not match backend cart after waiting")}(o),n?(console.log("🔄 Reloading cart page to show updates..."),window.location.reload()):(()=>{const o=document.querySelector(".cart-loaded-popup-backdrop");o&&o.remove();const n=document.createElement("div");n.className="cart-loaded-popup-backdrop",n.style.cssText="\n    position: fixed; z-index: 9999; inset: 0; pointer-events: none;\n  ";const e=document.createElement("div");e.className="cart-loaded-popup",e.style.cssText="\n    position: fixed;\n    top: 2rem;\n    right: 2rem;\n    min-width: 220px;\n    max-width: 300px;\n    background: rgba(255,255,255,0.5);\n    border-radius: 14px;\n    box-shadow: 0 4px 24px rgba(0,0,0,0.13);\n    padding: 1.2rem 1.2rem 1rem 1.2rem;\n    text-align: left;\n    backdrop-filter: blur(5px);\n    animation: fadeIn 0.4s;\n    pointer-events: auto;\n    font-family: inherit;\n  ";const t=document.createElement("button");t.innerHTML="&times;",t.setAttribute("aria-label","Close"),t.style.cssText="\n    position: absolute;\n    top: 0.5rem;\n    right: 0.7rem;\n    background: transparent;\n    border: none;\n    color: #888;\n    font-size: 1.3rem;\n    font-weight: bold;\n    cursor: pointer;\n    z-index: 2;\n    padding: 0;\n    line-height: 1;\n    transition: color 0.2s;\n  ",t.onmouseenter=()=>t.style.color="#222",t.onmouseleave=()=>t.style.color="#888",t.onclick=()=>{n.remove(),e.remove()},e.appendChild(t),e.innerHTML+='\n    <h1 style="font-size: 1rem; margin: 0 0 0.3rem 0; color: #222;">🛒 Don\'t miss your cart!</h1>\n    <p style="color: #444; margin: 0 0 1rem 0; font-size: 0.8rem;">You have an active cart in your account.</p>\n    <button id="cart-reload-btn" style="\n      background: linear-gradient(90deg, #6366f1 0%, #60a5fa 100%);\n      color: #fff;\n      border: none;\n      border-radius: 7px;\n      padding: 0.5rem 1rem;\n      font-size: 0.8rem;\n      font-weight: 600;\n      cursor: pointer;\n      box-shadow: 0 2px 8px rgba(99,102,241,0.10);\n      transition: background 0.2s, transform 0.1s;\n      margin-top: 0.2rem;\n      display: block;\n      width: 100%;\n    ">Show cart</button>\n  ';const a=document.createElement("style");a.innerHTML="\n    @keyframes fadeIn {\n      from { opacity: 0; transform: translateY(-10px);}\n      to { opacity: 1; transform: translateY(0);}\n    }\n    .cart-loaded-popup-backdrop { animation: fadeIn 0.3s; }\n  ",document.head.appendChild(a),"/cart"===window.location.pathname?e.querySelector("#cart-reload-btn").onclick=()=>window.location.reload():e.querySelector("#cart-reload-btn").onclick=()=>window.location.href="/cart",n.appendChild(e),document.body.appendChild(n)})()}catch(o){console.error("❌ Error replacing cart:",o)}}n=c(),n&&function(n){n?(console.log("🔄 Updating session with user ID:",n),fetch(o+"/api/session/update",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({userId:n})}).then((o=>{o.ok?console.log("✅ Session updated successfully"):console.error("❌ Failed to update session:",o.status)})).catch((o=>{console.error("❌ Error updating session:",o)}))):console.log("⚠️ No customer ID provided for session update")}(n),console.log("🏹 Arco - Cart Sync Initialized"),function(){console.log("🔄 Setting up cart request interception...");const o=window.fetch;window.fetch=function(...n){let t="string"==typeof n[0]?n[0]:n[0]?.url;return t&&t.match(/\/cart\/(add|update|change|clear)(\.js)?/)&&e&&(console.log("🛒 Cart modification detected:",t),setTimeout((()=>{console.log("🔄 Triggering sync after cart modification..."),g()}),100)),o.apply(this,n)};const n=window.XMLHttpRequest.prototype.open;window.XMLHttpRequest.prototype.open=function(o,t,...a){return this.addEventListener("load",(function(){t&&t.match(/\/cart\/(add|update|change|clear)(\.js)?/)&&e&&(console.log("🛒 Cart modification detected (XHR):",t),setTimeout((()=>{console.log("🔄 Triggering sync after cart modification..."),g()}),100))})),n.call(this,o,t,...a)},console.log("✅ Cart request interception setup complete")}(),g(),async function(){console.log("🔄 Starting cart observation...");let o=await i();console.log("📝 Initial cart state:",o),setInterval((async()=>{if(a)return void console.log("⏳ Skip observation - sync in progress");const n=await i();n&&n.items&&n.items.length>0&&!p(n,o)&&(console.log("🔄 Cart change detected in observation interval"),console.log("📝 Previous cart:",o),console.log("📝 Current cart:",n),o=n,r()?(console.log("🔄 Syncing observed cart changes to backend..."),await d(n)):console.log("⚠️ User not logged in, skipping backend sync"))}),1e3),console.log("✅ Cart observation started")}()}();